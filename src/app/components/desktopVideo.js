import { useState, useEffect, Suspense } from "react";
import ReactPlayer from "react-player";
import VideoPlayer from "./video";
import VideoPlayerComponent from "./videoComponent";
const DesktopVideo = ({
  name,
  description,
  videoStep,
  setVideoStep,
  projectsLength,
  videoWebm,
  videoMov,
  videoUrl,
  tags,
  videoPoster,
  width,
}) => {
  const [showMore, setShowMore] = useState();

  return (
    <>
      <Suspense fallback={<div>Loading...</div>}>
        <VideoPlayerComponent
          screenSize="desktop"
          videoUrl={videoUrl}
          videoMov={videoMov}
          videoWebm={videoWebm}
          videoPoster={videoPoster}
          id="video"
          className="desktopVideo"
        />
      </Suspense>

      <div className="flex xl:flex-nowrap hide-on-mobile lg:flex-nowrap md:flex-wrap sm:flex-wrap flex-wrap gap-6 align-middle items-center justify-between fixed top-0 right-0 xl:p-6 xl:pb-8 lg:p-4 md:p-6 sm:p-6 p-6 z-100 ">
        <span className="text-white xl:block lg:block md:hidden hidden opacity-50 font-normal text-2xl">
          {`${videoStep}/${projectsLength} `}
        </span>
      </div>

      {/* bottom row */}
      <div
        className="flex xl:flex-nowrap hide-on-mobile lg:flex-nowrap md:flex-wrap sm:flex-wrap flex-wrap gap-6 align-middle items-center justify-between fixed bottom-0 xl:p-6 xl:pb-8 lg:pb-8 md:pb-8 lg:p-6 md:p-6 sm:p-6 p-6 z-[10000] "
        // style={{ width: "-webkit-fill-available" }}
        style={{ width: `calc(100vw - ${width}px)` }}
      >
        <button
          onClick={() => {
            setShowMore(true);
          }}
          className="h-10 cursor-pointer font-[GeneralSansMedium] flex align-middle items-center text-[#fff] text-xl bg-[#0D0D0D] font-medium px-4 border-2 border-[#0D0D0D]"
        >
          viac o projekte
        </button>
        {showMore ? (
          <div className="absolute px-4 pt-4 pb-6 bg-[#0D0D0D] w-[375px] h-[375px] bottom-6 left-6">
            <div className="flex flex-col justify-between h-full ">
              <div className="flex gap-4 flex-col">
                <div className="flex align-middle  justify-between ">
                  <h1 className="text-white font-[GeneralSansMedium] font-medium text-4xl">
                    {name}
                  </h1>
                  <svg
                    className="cursor-pointer"
                    onClick={() => {
                      setShowMore(false);
                    }}
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <g clipPath="url(#clip0_390_1045)">
                      <path
                        d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z"
                        fill="white"
                      />
                    </g>
                    <rect
                      x="0.75"
                      y="0.75"
                      width="22.5"
                      height="22.5"
                      stroke="white"
                      stroke-width="1.5"
                    />
                    <defs>
                      <clipPath id="clip0_390_1045">
                        <rect width="24" height="24" fill="white" />
                      </clipPath>
                    </defs>
                  </svg>
                </div>
                <p className="text-white text-sm font-normal">{description}</p>
              </div>
              {tags?.length > 0 ? (
                <div className="flex align-middle items-center gap-1.5 flex-wrap">
                  {tags?.map((tag, index) => {
                    return (
                      <button
                        key={index}
                        className="px-2.5 py-1 border-2 font-[GeneralSansMedium] border-[#5E79FF] text-white text-sm font-medium"
                      >
                        {tag}
                      </button>
                    );
                  })}
                </div>
              ) : null}
            </div>
          </div>
        ) : null}
        {name == "Mobilecare" || name == "Apartment Holdings" ? (
          <p className="flex align-middle items-center gap-1.5 text-[#0D0D0D] font-normal text-base">
            vyroben√© pre
            <svg
              width="67"
              height="16"
              viewBox="0 0 67 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_399_230)">
                <path
                  d="M11.1034 2.21889C11.0718 2.19727 11.0389 2.17599 11.0047 2.15505L8.22371 0.439979C8.01686 0.311571 7.79295 0.217441 7.55965 0.160806C7.40214 0.122554 7.24115 0.103013 7.07962 0.102539C6.98173 0.102573 6.88395 0.109683 6.78696 0.123819C6.52174 0.162905 6.26493 0.251031 6.02802 0.384246C5.99577 0.402486 5.96304 0.420219 5.93315 0.439979C5.81362 0.523579 5.70073 0.610726 5.59116 0.698886L1.49623 3.22259C1.14853 3.43856 0.859768 3.74794 0.658647 4.12C0.457525 4.49207 0.351039 4.91387 0.349768 5.3435V10.9204C0.343798 11.4586 0.50697 11.9835 0.813192 12.411C1.00017 12.6674 1.23238 12.8823 1.49671 13.0433C1.61308 13.1065 1.73119 13.1647 1.85103 13.2181L2.06211 13.3483L6.00241 15.7803C6.35096 15.9953 6.74637 16.1085 7.14887 16.1085C7.55138 16.1085 7.94678 15.9953 8.29534 15.7803L12.4111 13.2419L12.7508 13.0327C12.7806 13.0144 12.8086 12.9947 12.8371 12.9749C13.1471 12.7636 13.4049 12.4758 13.5887 12.1356C13.7726 11.7955 13.8771 11.4131 13.8934 11.0207C13.8934 10.9847 13.8967 10.9482 13.8967 10.9118V8.95907L10.5873 6.92177V6.92886L9.04289 6.02193L7.52217 5.12867C7.45471 5.08656 7.37933 5.06099 7.30148 5.05381C7.22363 5.04662 7.14526 5.058 7.07203 5.08713C7.04215 5.0986 7.01313 5.11249 6.98523 5.12867L4.66099 6.49667C4.65625 6.49971 4.65293 6.50326 4.64771 6.5063C4.58755 6.54055 4.53485 6.588 4.49308 6.64555C4.4513 6.70309 4.4214 6.76943 4.40532 6.84019L4.44612 6.86401L9.40718 9.77835L10.5185 10.4314L10.5332 10.4401C10.4336 10.5763 10.31 10.6904 10.1694 10.776L8.96415 11.5203C8.51018 11.8413 8.03634 12.1291 7.54589 12.3816C7.2602 12.4858 6.94806 12.4697 6.67312 12.3365C6.63043 12.3168 6.58878 12.2947 6.54837 12.2701L4.11693 10.7724C3.9307 10.6554 3.77603 10.4888 3.66797 10.2889C3.55991 10.0891 3.50214 9.86272 3.50029 9.63193V7.37523C3.4758 6.94749 3.4831 6.51835 3.52211 6.09185C3.53018 6.0731 3.53872 6.05537 3.54725 6.03763C3.65529 5.80932 3.8239 5.62005 4.03202 5.49347L6.46109 3.99577C6.62316 3.89235 6.8058 3.83129 6.99415 3.81755C7.1825 3.80382 7.37122 3.8378 7.54494 3.91673C7.59609 3.93972 7.64583 3.96612 7.69388 3.99577L9.92325 5.37086C11.6351 6.42675 12.3931 7.0155 12.6924 7.13558L13.8967 7.92851V3.94409L11.1034 2.21889Z"
                  fill="#0D0D0D"
                />
                <path
                  d="M27.6472 11.0354C27.6608 11.7154 27.5561 12.3921 27.3384 13.0312C27.1527 13.5643 26.8559 14.0453 26.4704 14.4377C26.0805 14.82 25.6155 15.1046 25.1095 15.2707C24.5355 15.4602 23.9373 15.5531 23.3365 15.5458C22.6619 15.5413 21.9913 15.4355 21.3443 15.2317C20.7065 15.0447 20.1057 14.7357 19.5712 14.3197L20.7774 12.481C21.1184 12.8083 21.5157 13.0618 21.9472 13.2273C22.3502 13.3852 22.7758 13.4676 23.2051 13.471C23.4908 13.4961 23.7782 13.4558 24.0481 13.3528C24.318 13.2498 24.5643 13.0864 24.7704 12.8736C25.1231 12.4331 25.3047 11.8652 25.2779 11.2862V10.815H25.2338C24.9923 11.1427 24.6791 11.4018 24.3217 11.5695C23.9098 11.7647 23.463 11.8614 23.0125 11.8527C22.501 11.8633 21.9936 11.7532 21.5264 11.5305C21.1073 11.3258 20.7337 11.0285 20.4302 10.658C20.1264 10.2827 19.894 9.84756 19.7462 9.37712C19.587 8.87889 19.5068 8.35572 19.5091 7.82925C19.5073 7.30034 19.5874 6.77475 19.7462 6.27379C19.895 5.79676 20.1271 5.35422 20.4302 4.96962C20.7444 4.57117 21.138 4.25283 21.5823 4.03796C22.0266 3.82308 22.5102 3.7171 22.9978 3.72779C23.4538 3.72673 23.9049 3.82842 24.3217 4.02621C24.7385 4.2211 25.0918 4.5438 25.3367 4.95341H25.3662V3.94768H27.6468L27.6472 11.0354ZM25.3519 7.81405C25.3525 7.55662 25.3101 7.30114 25.2267 7.05963C25.1464 6.82449 25.024 6.60833 24.8662 6.42325C24.7093 6.24003 24.519 6.09296 24.307 5.99107C24.0751 5.88297 23.8242 5.8294 23.5713 5.834C23.3207 5.82885 23.0722 5.88247 22.8432 5.99107C22.6384 6.09101 22.4555 6.23564 22.3062 6.41565C22.1559 6.59952 22.0408 6.81316 21.9676 7.04442C21.888 7.29221 21.8482 7.5526 21.8499 7.81456C21.849 8.07133 21.8887 8.32641 21.9676 8.56899C22.0417 8.80208 22.1567 9.01803 22.3062 9.20536C22.4615 9.40062 22.6557 9.55632 22.8746 9.66108C23.0935 9.76584 23.3315 9.81701 23.5713 9.81083C23.8155 9.81489 24.0577 9.76377 24.2821 9.66082C24.5065 9.55787 24.708 9.40542 24.8733 9.21347C25.0281 9.03035 25.148 8.81678 25.2262 8.58469C25.3106 8.33799 25.353 8.07719 25.3515 7.81456"
                  fill="#0D0D0D"
                />
                <path
                  d="M36.8274 7.95535V8.26948C36.8276 8.36917 36.8227 8.46879 36.8127 8.56791H31.5002C31.5172 8.7796 31.5803 8.98412 31.6842 9.16527C31.7885 9.34492 31.9233 9.50216 32.0817 9.62887C32.4192 9.89918 32.8296 10.0453 33.2514 10.0454C33.5878 10.0566 33.9214 9.97821 34.2224 9.81735C34.4768 9.67522 34.6981 9.47384 34.8698 9.2281L36.5471 10.3595C36.2046 10.893 35.7347 11.319 35.1862 11.5932C34.5702 11.8931 33.8988 12.0408 33.222 12.0254C32.6913 12.0286 32.1639 11.9356 31.6624 11.7503C31.1877 11.577 30.7501 11.3045 30.375 10.9487C30.0011 10.5889 29.7049 10.1465 29.507 9.65218C29.288 9.09537 29.1803 8.49586 29.1906 7.89202C29.1828 7.2969 29.2878 6.70625 29.4994 6.15567C29.6914 5.65902 29.9768 5.20978 30.338 4.8358C30.6982 4.46928 31.1233 4.18333 31.5884 3.99474C32.0863 3.79241 32.6153 3.6912 33.148 3.69631C33.6563 3.69022 34.1609 3.78897 34.6341 3.98714C35.0744 4.17317 35.471 4.4601 35.7962 4.8277C36.1313 5.21358 36.3894 5.66813 36.5551 6.16378C36.7446 6.73901 36.8368 7.34564 36.8274 7.95535ZM34.6056 6.96532C34.613 6.57855 34.4844 6.20288 34.2451 5.91247C34.1062 5.75883 33.9372 5.63978 33.7503 5.56377C33.5634 5.48776 33.3631 5.45666 33.1637 5.47268C32.943 5.46988 32.7236 5.50971 32.5162 5.59023C32.3278 5.66394 32.1534 5.77307 32.0011 5.91247C31.8555 6.04652 31.7356 6.20925 31.6477 6.39178C31.5609 6.56954 31.5107 6.76511 31.5006 6.96532H34.6056Z"
                  fill="#0D0D0D"
                />
                <path
                  d="M43.3895 6.48041C43.2405 6.28217 43.0486 6.12566 42.8303 6.02441C42.6046 5.91151 42.3585 5.85255 42.1093 5.85164C41.8698 5.84789 41.6329 5.90448 41.4177 6.01681C41.2154 6.1239 41.0353 6.27348 40.8883 6.4566C40.7385 6.64499 40.6213 6.86051 40.5426 7.09297C40.4582 7.33967 40.4158 7.60048 40.4173 7.86311C40.4156 8.12507 40.4553 8.38546 40.535 8.63324C40.6109 8.86703 40.7294 9.08245 40.8836 9.26708C41.0348 9.4501 41.2201 9.59732 41.4277 9.69927C41.6512 9.80671 41.8941 9.86033 42.1392 9.85633C42.3885 9.85542 42.6354 9.80473 42.8673 9.70687C43.0925 9.61858 43.2927 9.46972 43.4483 9.27468L44.7874 11.0191C44.4503 11.3545 44.0484 11.6067 43.6101 11.7579C43.1177 11.9382 42.6004 12.0286 42.0799 12.0254C41.5286 12.0302 40.9807 11.9346 40.4595 11.7427C39.9758 11.5655 39.531 11.2848 39.1523 10.9178C38.7784 10.5505 38.4809 10.1034 38.279 9.60553C37.8549 8.49212 37.8549 7.24574 38.279 6.13233C38.481 5.63448 38.7785 5.18742 39.1523 4.82007C39.532 4.45249 39.9764 4.16934 40.4595 3.98711C40.9749 3.79078 41.5185 3.69235 42.0656 3.69628C42.3298 3.69621 42.5934 3.7225 42.853 3.77481C43.1077 3.82589 43.3585 3.89685 43.6034 3.98711C43.8352 4.07137 44.0578 4.18195 44.2675 4.31695C44.4569 4.43841 44.632 4.58349 44.7893 4.74913L43.3895 6.48041Z"
                  fill="#0D0D0D"
                />
                <path
                  d="M53.4971 7.82969C53.505 8.42636 53.3948 9.01808 53.1736 9.56604C52.9694 10.0675 52.6686 10.5174 52.2908 10.8864C51.9128 11.2514 51.4736 11.5367 50.9964 11.7275C49.9824 12.1255 48.8689 12.1255 47.8549 11.7275C47.3765 11.5393 46.9368 11.2536 46.5604 10.8864C46.1863 10.5156 45.8881 10.066 45.6848 9.56604C45.4635 9.0181 45.3533 8.42637 45.3613 7.82969C45.3528 7.23542 45.4631 6.64605 45.6848 6.10094C45.8885 5.60585 46.1867 5.16165 46.5604 4.79678C46.9368 4.43526 47.3769 4.15744 47.8549 3.97953C48.8723 3.60236 49.979 3.60236 50.9964 3.97953C51.4733 4.15997 51.9129 4.43751 52.2908 4.79678C52.6682 5.15989 52.969 5.6044 53.1736 6.10094C53.3952 6.64607 53.5055 7.23543 53.4971 7.82969ZM51.1728 7.82969C51.1728 7.57813 51.133 7.32839 51.0552 7.09097C50.9809 6.85804 50.8662 6.64214 50.717 6.4546C50.5654 6.26784 50.3802 6.11553 50.1725 6.0067C49.9367 5.89266 49.6809 5.83367 49.4221 5.83367C49.1633 5.83367 48.9074 5.89266 48.6717 6.0067C48.4653 6.11415 48.2823 6.26675 48.1347 6.4546C47.99 6.64203 47.8799 6.85712 47.8103 7.08844C47.663 7.56836 47.663 8.08595 47.8103 8.56588C47.8823 8.8033 47.9948 9.0244 48.1423 9.21796C48.2902 9.4127 48.4758 9.57087 48.6864 9.68156C48.9222 9.79547 49.178 9.85439 49.4368 9.85439C49.6956 9.85439 49.9514 9.79547 50.1872 9.68156C50.3977 9.5708 50.5833 9.41264 50.7312 9.21796C50.8787 9.02441 50.9913 8.80331 51.0633 8.56588C51.1365 8.32745 51.1738 8.0781 51.1738 7.82716"
                  fill="#0D0D0D"
                />
                <path
                  d="M59.779 6.06951C59.6754 6.03894 59.5696 6.01792 59.4626 6.00668C59.3595 5.99621 59.259 5.99097 59.161 5.99097C58.8783 5.98129 58.5978 6.04602 58.3442 6.17945C58.1401 6.29087 57.9597 6.44612 57.8143 6.63545C57.6856 6.80757 57.5889 7.00452 57.5297 7.21559C57.4758 7.39284 57.4461 7.57748 57.4415 7.7638V11.7761H55.0286V3.95721H57.3528V5.0886H57.3822C57.5635 4.6938 57.8371 4.35574 58.1767 4.10719C58.5274 3.85153 58.9438 3.71873 59.3683 3.72719C59.4633 3.72725 59.5583 3.73249 59.6528 3.74289C59.7302 3.75011 59.8067 3.7659 59.881 3.79001L59.779 6.06951Z"
                  fill="#0D0D0D"
                />
                <path
                  d="M60.5149 5.01618C60.9465 4.5762 61.4603 4.23879 62.0228 4.02615C62.5864 3.80813 63.1812 3.69652 63.7806 3.69631C64.3116 3.6825 64.8408 3.7649 65.346 3.94002C65.7497 4.08565 66.1085 4.34655 66.3833 4.69445C66.6651 5.07192 66.8637 5.51228 66.9644 5.9829C67.096 6.58818 67.1578 7.20839 67.1484 7.8297V11.7741H64.9418V10.9391H64.8977C64.6957 11.278 64.4002 11.5416 64.052 11.6935C63.6645 11.8737 63.246 11.9647 62.8234 11.9606C62.5157 11.9587 62.2094 11.9165 61.9113 11.8349C61.6039 11.7543 61.3124 11.6158 61.0504 11.426C60.7851 11.2311 60.566 10.9728 60.4105 10.6716C60.2336 10.313 60.1474 9.91133 60.1605 9.50626C60.1384 9.0081 60.2934 8.51942 60.5945 8.13826C60.9019 7.77948 61.2853 7.50462 61.7126 7.33671C62.2023 7.13974 62.7143 7.01298 63.2352 6.95975C63.7776 6.89784 64.3227 6.86639 64.8683 6.86551V6.73986C64.8793 6.57394 64.8499 6.4078 64.7829 6.25765C64.7159 6.10749 64.6136 5.97845 64.486 5.88309C64.2053 5.69203 63.8771 5.59612 63.5444 5.60797C63.2012 5.60786 62.8621 5.68829 62.5512 5.84357C62.2532 5.98615 61.9777 6.17705 61.7344 6.40951L60.5149 5.01618ZM64.9432 8.36373H64.6345C64.3695 8.36373 64.1021 8.3769 63.8323 8.40325C63.5876 8.42444 63.3458 8.47457 63.1114 8.55271C62.9167 8.61625 62.7383 8.72647 62.5896 8.87495C62.5208 8.94738 62.4669 9.03438 62.4315 9.13036C62.396 9.22635 62.3798 9.32919 62.3837 9.43229C62.3799 9.56518 62.4129 9.69633 62.4786 9.80925C62.54 9.91269 62.6232 9.99942 62.7215 10.0626C62.8261 10.1281 62.9408 10.1734 63.0601 10.1963C63.1812 10.2218 63.3043 10.2348 63.4277 10.2354C63.6331 10.2502 63.8392 10.2195 64.0329 10.1451C64.2266 10.0707 64.4038 9.95431 64.5533 9.80317C64.6874 9.64512 64.7909 9.46029 64.8578 9.25933C64.9247 9.05837 64.9538 8.84526 64.9432 8.63226V8.36373Z"
                  fill="#0D0D0D"
                />
              </g>
              <defs>
                <clipPath id="clip0_399_230">
                  <rect width="67" height="16" fill="#0D0D0D" />
                </clipPath>
              </defs>
            </svg>
          </p>
        ) : (
          <p></p>
        )}
        <div className="flex align-middle gap-2.5">
          <button
            onClick={() => {
              if (videoStep != 1) {
                setVideoStep(videoStep - 1);
              }
            }}
            className="h-10 w-10 flex align-middle items-center bg-[#0D0D0D] justify-center cursor-pointer"
          >
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_354_221)">
                <path
                  d="M17.5101 3.86998L15.7301 2.09998L5.84009 12L15.7401 21.9L17.5101 20.13L9.38009 12L17.5101 3.86998Z"
                  fill="#fff"
                />
              </g>
              <defs>
                <clipPath id="clip0_354_221">
                  <rect width="24" height="24" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </button>
          <button
            onClick={() => {
              if (videoStep < projectsLength) {
                setVideoStep(videoStep + 1);
              }
            }}
            className="h-10 w-10 flex align-middle items-center bg-[#0D0D0D] justify-center cursor-pointer"
          >
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6.48991 20.13L8.26991 21.9L18.1599 12L8.25991 2.10002L6.48991 3.87002L14.6199 12L6.48991 20.13Z"
                fill="#fff"
              />
            </svg>
          </button>
        </div>
      </div>
    </>
  );
};

export default DesktopVideo;
